<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.help.rebate.dao.CommissionAccountDao">
  <resultMap id="BaseResultMap" type="com.help.rebate.dao.entity.CommissionAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="total_commission" jdbcType="VARCHAR" property="totalCommission" />
    <result column="remain_commission" jdbcType="VARCHAR" property="remainCommission" />
    <result column="finish_commission" jdbcType="VARCHAR" property="finishCommission" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_created, gmt_modified, open_id, total_commission, remain_commission, finish_commission, 
    account_type, `status`
  </sql>
  <select id="selectByExample" parameterType="com.help.rebate.dao.entity.CommissionAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commission_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commission_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commission_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.help.rebate.dao.entity.CommissionAccountExample">
    delete from commission_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.help.rebate.dao.entity.CommissionAccount" useGeneratedKeys="true">
    insert into commission_account (gmt_created, gmt_modified, open_id, 
      total_commission, remain_commission, finish_commission, 
      account_type, `status`)
    values (#{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{openId,jdbcType=VARCHAR}, 
      #{totalCommission,jdbcType=VARCHAR}, #{remainCommission,jdbcType=VARCHAR}, #{finishCommission,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.help.rebate.dao.entity.CommissionAccount" useGeneratedKeys="true">
    insert into commission_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="totalCommission != null">
        total_commission,
      </if>
      <if test="remainCommission != null">
        remain_commission,
      </if>
      <if test="finishCommission != null">
        finish_commission,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="totalCommission != null">
        #{totalCommission,jdbcType=VARCHAR},
      </if>
      <if test="remainCommission != null">
        #{remainCommission,jdbcType=VARCHAR},
      </if>
      <if test="finishCommission != null">
        #{finishCommission,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.help.rebate.dao.entity.CommissionAccountExample" resultType="java.lang.Long">
    select count(*) from commission_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commission_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.totalCommission != null">
        total_commission = #{record.totalCommission,jdbcType=VARCHAR},
      </if>
      <if test="record.remainCommission != null">
        remain_commission = #{record.remainCommission,jdbcType=VARCHAR},
      </if>
      <if test="record.finishCommission != null">
        finish_commission = #{record.finishCommission,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commission_account
    set id = #{record.id,jdbcType=INTEGER},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      open_id = #{record.openId,jdbcType=VARCHAR},
      total_commission = #{record.totalCommission,jdbcType=VARCHAR},
      remain_commission = #{record.remainCommission,jdbcType=VARCHAR},
      finish_commission = #{record.finishCommission,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.help.rebate.dao.entity.CommissionAccount">
    update commission_account
    <set>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="totalCommission != null">
        total_commission = #{totalCommission,jdbcType=VARCHAR},
      </if>
      <if test="remainCommission != null">
        remain_commission = #{remainCommission,jdbcType=VARCHAR},
      </if>
      <if test="finishCommission != null">
        finish_commission = #{finishCommission,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.help.rebate.dao.entity.CommissionAccount">
    update commission_account
    set gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR},
      total_commission = #{totalCommission,jdbcType=VARCHAR},
      remain_commission = #{remainCommission,jdbcType=VARCHAR},
      finish_commission = #{finishCommission,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>