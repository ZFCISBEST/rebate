<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.help.rebate.dao.OrderOpenidMapDao">
  <resultMap id="BaseResultMap" type="com.help.rebate.dao.entity.OrderOpenidMap">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="trade_id" jdbcType="VARCHAR" property="tradeId" />
    <result column="parent_trade_id" jdbcType="VARCHAR" property="parentTradeId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="external_id" jdbcType="VARCHAR" property="externalId" />
    <result column="special_id" jdbcType="VARCHAR" property="specialId" />
    <result column="relation_id" jdbcType="VARCHAR" property="relationId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="pre_commission_fee" jdbcType="VARCHAR" property="preCommissionFee" />
    <result column="act_commission_fee" jdbcType="VARCHAR" property="actCommissionFee" />
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
    <result column="commission_status" jdbcType="VARCHAR" property="commissionStatus" />
    <result column="refund_tag" jdbcType="INTEGER" property="refundTag" />
    <result column="map_type" jdbcType="VARCHAR" property="mapType" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_created, gmt_modified, trade_id, parent_trade_id, open_id, external_id, special_id, 
    relation_id, item_id, pre_commission_fee, act_commission_fee, order_status, commission_status, 
    refund_tag, map_type, `status`
  </sql>
  <select id="selectByExample" parameterType="com.help.rebate.dao.entity.OrderOpenidMapExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_openid_map
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_openid_map
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_openid_map
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.help.rebate.dao.entity.OrderOpenidMapExample">
    delete from order_openid_map
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.help.rebate.dao.entity.OrderOpenidMap" useGeneratedKeys="true">
    insert into order_openid_map (gmt_created, gmt_modified, trade_id, 
      parent_trade_id, open_id, external_id, 
      special_id, relation_id, item_id, 
      pre_commission_fee, act_commission_fee, order_status, 
      commission_status, refund_tag, map_type, 
      `status`)
    values (#{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{tradeId,jdbcType=VARCHAR}, 
      #{parentTradeId,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{externalId,jdbcType=VARCHAR}, 
      #{specialId,jdbcType=VARCHAR}, #{relationId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{preCommissionFee,jdbcType=VARCHAR}, #{actCommissionFee,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, 
      #{commissionStatus,jdbcType=VARCHAR}, #{refundTag,jdbcType=INTEGER}, #{mapType,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.help.rebate.dao.entity.OrderOpenidMap" useGeneratedKeys="true">
    insert into order_openid_map
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="parentTradeId != null">
        parent_trade_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="externalId != null">
        external_id,
      </if>
      <if test="specialId != null">
        special_id,
      </if>
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="preCommissionFee != null">
        pre_commission_fee,
      </if>
      <if test="actCommissionFee != null">
        act_commission_fee,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="commissionStatus != null">
        commission_status,
      </if>
      <if test="refundTag != null">
        refund_tag,
      </if>
      <if test="mapType != null">
        map_type,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeId != null">
        #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="parentTradeId != null">
        #{parentTradeId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null">
        #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="specialId != null">
        #{specialId,jdbcType=VARCHAR},
      </if>
      <if test="relationId != null">
        #{relationId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="preCommissionFee != null">
        #{preCommissionFee,jdbcType=VARCHAR},
      </if>
      <if test="actCommissionFee != null">
        #{actCommissionFee,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="commissionStatus != null">
        #{commissionStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundTag != null">
        #{refundTag,jdbcType=INTEGER},
      </if>
      <if test="mapType != null">
        #{mapType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.help.rebate.dao.entity.OrderOpenidMapExample" resultType="java.lang.Long">
    select count(*) from order_openid_map
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_openid_map
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tradeId != null">
        trade_id = #{record.tradeId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentTradeId != null">
        parent_trade_id = #{record.parentTradeId,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.externalId != null">
        external_id = #{record.externalId,jdbcType=VARCHAR},
      </if>
      <if test="record.specialId != null">
        special_id = #{record.specialId,jdbcType=VARCHAR},
      </if>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=VARCHAR},
      </if>
      <if test="record.preCommissionFee != null">
        pre_commission_fee = #{record.preCommissionFee,jdbcType=VARCHAR},
      </if>
      <if test="record.actCommissionFee != null">
        act_commission_fee = #{record.actCommissionFee,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.commissionStatus != null">
        commission_status = #{record.commissionStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.refundTag != null">
        refund_tag = #{record.refundTag,jdbcType=INTEGER},
      </if>
      <if test="record.mapType != null">
        map_type = #{record.mapType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_openid_map
    set id = #{record.id,jdbcType=INTEGER},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      trade_id = #{record.tradeId,jdbcType=VARCHAR},
      parent_trade_id = #{record.parentTradeId,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      external_id = #{record.externalId,jdbcType=VARCHAR},
      special_id = #{record.specialId,jdbcType=VARCHAR},
      relation_id = #{record.relationId,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=VARCHAR},
      pre_commission_fee = #{record.preCommissionFee,jdbcType=VARCHAR},
      act_commission_fee = #{record.actCommissionFee,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=VARCHAR},
      commission_status = #{record.commissionStatus,jdbcType=VARCHAR},
      refund_tag = #{record.refundTag,jdbcType=INTEGER},
      map_type = #{record.mapType,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.help.rebate.dao.entity.OrderOpenidMap">
    update order_openid_map
    <set>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeId != null">
        trade_id = #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="parentTradeId != null">
        parent_trade_id = #{parentTradeId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null">
        external_id = #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="specialId != null">
        special_id = #{specialId,jdbcType=VARCHAR},
      </if>
      <if test="relationId != null">
        relation_id = #{relationId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="preCommissionFee != null">
        pre_commission_fee = #{preCommissionFee,jdbcType=VARCHAR},
      </if>
      <if test="actCommissionFee != null">
        act_commission_fee = #{actCommissionFee,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="commissionStatus != null">
        commission_status = #{commissionStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundTag != null">
        refund_tag = #{refundTag,jdbcType=INTEGER},
      </if>
      <if test="mapType != null">
        map_type = #{mapType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.help.rebate.dao.entity.OrderOpenidMap">
    update order_openid_map
    set gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      trade_id = #{tradeId,jdbcType=VARCHAR},
      parent_trade_id = #{parentTradeId,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      external_id = #{externalId,jdbcType=VARCHAR},
      special_id = #{specialId,jdbcType=VARCHAR},
      relation_id = #{relationId,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=VARCHAR},
      pre_commission_fee = #{preCommissionFee,jdbcType=VARCHAR},
      act_commission_fee = #{actCommissionFee,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      commission_status = #{commissionStatus,jdbcType=VARCHAR},
      refund_tag = #{refundTag,jdbcType=INTEGER},
      map_type = #{mapType,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>